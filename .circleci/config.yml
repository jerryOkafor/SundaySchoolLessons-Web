# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/node:latest
    working_directory: ~/ssl
    steps:
      - checkout
      - run: mkdir -p ssl
      - attach_workspace:
          at: ~/ssl
      - restore_cache:
          keys:
            - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ checksum "functions/yarn.lock"}}
            - yarn-cache-{{ .Branch }}
            - yarn-cache-
      - run: yarn install
      - save_cache:
          key: yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ checksum "functions/yarn.lock"}}
          paths: node_modules
      - persist_to_workspace:
          root: ssl
          paths: 
            - node_modules
            - build
            - functions/node_modules

  check_vulnerabilities:
      docker:
        - image: circleci/node:latest
      working_directory: ~/ssl
      steps:
        - attach_workspace:
            at: ~/ssl
        - run: yarn install
        - run: |
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                yarn validate:dependencies
              else
                yarn validate:dependencies || true
              fi

  test_and_report:
    docker:
      - image: circleci/node:latest
    working_directory: ~/ssl
    steps:
      - attach_workspace:
          at: ~/ssl
      - run: yarn install
      - run: CI=true yarn test:coverage
      - run: yarn reportCoverage
      - store_artifacts:
          path: ./coverage/clover.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: ./coverage/clover.xml

  build:
    docker:
      - image: circleci/node:latest
    working_directory: ~/ssl
    steps:
      - attach_workspace:
          at: ~/ssl
      - run:
          name: Install react dependencies
          command: yarn install
      # - run:
      #     name: Install fucntion dependencies
      #     command: cd functions && yarn install
      - run:
          name: yarn build
          command: |
            if [ "${CIRCLE_BRANCH}" == "dev" ]; then
              CI=true REACT_APP_DIST_ENV=stagin yarn build
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              CI=true REACT_APP_DIST_ENV=production yarn build
            else
              echo "This failed miserably!"
            fi
      - persist_to_workspace:
          root: .
          paths: 
            - node_modules
            - build
            - functions/node_modules
  deployment:
    docker:
      - image: circleci/node:latest
    working_directory: ~/ssl
    steps:
      - attach_workspace:
          at: ~/ssl
      - run: yarn install
      - deploy:
          name: Deploy & Alias.
          command: |
            if [ "${CIRCLE_BRANCH}" == "dev" ]; then
              ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN -P staggin
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN -P default
            else
              echo "This failed miserably!"
            fi
workflows:
  version: 2
  test_build_deploy:
    jobs:
      - checkout_code
      - check_vulnerabilities:
          requires:
            - checkout_code
      - test_and_report:
          requires:
            - checkout_code
      - build:
          requires:
            - checkout_code
          filters:
            branches:
              only:
                - dev
                - master
      - deployment:
          requires:
            - check_vulnerabilities
            - test_and_report
            - build
          filters:
            branches:
              only:
                - dev
                - master